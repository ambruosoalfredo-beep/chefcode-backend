// ChefCode Mobile - Optimized build.gradle
// Sostituisci il contenuto di android/app/build.gradle con questo

apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

import com.android.build.OutputFile

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = true
def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = true

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.chefcode.mobile"
    defaultConfig {
        applicationId "com.chefcode.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        
        // ChefCode specific config
        resValue "string", "app_name", "ChefCode Mobile"
        buildConfigField "String", "SERVER_URL", '"http://192.168.1.100:3000"'
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('CHEFCODE_UPLOAD_STORE_FILE')) {
                storeFile file(CHEFCODE_UPLOAD_STORE_FILE)
                storePassword CHEFCODE_UPLOAD_STORE_PASSWORD
                keyAlias CHEFCODE_UPLOAD_KEY_ALIAS
                keyPassword CHEFCODE_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride =
                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }
            
            // Rename APK files
            def appName = "ChefCode-Mobile"
            def buildType = variant.buildType.name
            def version = variant.versionName
            def date = new Date()
            def formattedDate = date.format('yyyy-MM-dd')
            
            if (buildType == "release") {
                output.outputFileName = "${appName}-v${version}-${formattedDate}-release.apk"
            } else {
                output.outputFileName = "${appName}-v${version}-${formattedDate}-debug.apk"
            }
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    // React Native
    implementation "com.facebook.react:react-native:+"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    
    // ChefCode specific dependencies
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    
    // Audio/Voice dependencies
    implementation 'androidx.media:media:1.6.0'
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.facebook.fbjni'
    }

    if (enableHermes) {
        implementation("com.facebook.react:hermes-engine:+") {
            exclude group:"com.facebook.fbjni"
        }
    } else {
        implementation jscFlavor
    }
}

if (isNewArchitectureEnabled()) {
    react {
        jsRootDir = file("../src/")
        libraryName = "ChefCodeMobile"
        codegenJavaPackageName = "com.chefcode.mobile"
    }
}

// Custom tasks for ChefCode
task cleanChefCode(type: Delete) {
    delete rootProject.buildDir
    delete file("src/main/assets/index.android.bundle")
    delete file("src/main/assets/index.android.bundle.meta")
}

task bundleChefCode {
    doLast {
        println "🍳 Building ChefCode bundle..."
        exec {
            workingDir '../../'
            commandLine 'npx', 'react-native', 'bundle', 
                        '--platform', 'android', 
                        '--dev', 'false',
                        '--entry-file', 'index.js',
                        '--bundle-output', 'android/app/src/main/assets/index.android.bundle',
                        '--assets-dest', 'android/app/src/main/res'
        }
    }
}

// Build optimizations
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn bundleChefCode
    }
}